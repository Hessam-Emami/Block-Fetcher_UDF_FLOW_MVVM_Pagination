ext {
    ext.versionMajor = 0
    ext.versionMinor = 0
    ext.versionPatch = 1
    ext.versionClassifier = "alpha"

    androidMinSdkVersion = 21
    androidTargetSdkVersion = 30
    androidCompileSdkVersion = 30
    androidBuildToolsVersion = '30.0.2'


    appVersionCode = generateVersionCode()
    appVersionName = generateVersionName()


    //Plugins  ###################################################################################################################

    androidGradlePluginVersion = '4.1.0'
    kotlinGradlePluginVersion = '1.4.21'
    benManesPluginVersion = "0.36.0"
    scabbardPluginVersion = "0.4.0"
    navigationVersion = "2.3.2"
    hiltPluginVersion = "2.28-alpha"
    detektVersion = "1.15.0-RC1"
    buildPlugins = [
            androidGradlePlugin      : "com.android.tools.build:gradle:$androidGradlePluginVersion",
            kotlinGradlePlugin       : "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinGradlePluginVersion",
            navigationSafeArgsPlugin : "androidx.navigation:navigation-safe-args-gradle-plugin:$navigationVersion",
            //Plugin used for automated dependency version management https://github.com/ben-manes/gradle-versions-plugin
            benManesVersionManagement: "com.github.ben-manes:gradle-versions-plugin:$benManesPluginVersion",
            //Plugin used for visualizing Dagger graphs https://arunkumar9t2.github.io/scabbard/
            scabbard                 : "gradle.plugin.dev.arunkumar:scabbard-gradle-plugin:$scabbardPluginVersion",
            daggerHiltPlugin         : "com.google.dagger:hilt-android-gradle-plugin:$hiltPluginVersion",
            detekt                   : "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:$detektVersion",
            detektFormatting         : "io.gitlab.arturbosch.detekt:detekt-formatting:$detektVersion"
    ]

    //Architecture Component Libraries  ###################################################################################################################

    pagingVersion = "3.0.0-alpha10"
    prefVersion = "1.1.0"
    lifecyleExtensionVersion = '2.2.0'
    room_version = "2.3.0-alpha03"

    archComponentLibraries = [
            paging            : "androidx.paging:paging-runtime:$pagingVersion",
            preference        : "androidx.preference:preference-ktx:$prefVersion",
            //Set of extensions used that reduce some boilerplate codes when working with viewmodel, livedata lifecycle and etc.
            lifecycleViewModel: "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecyleExtensionVersion",
            lifecyclerLiveData: "androidx.lifecycle:lifecycle-livedata-ktx:$lifecyleExtensionVersion",
            lifecycleRuntime  : "androidx.lifecycle:lifecycle-runtime-ktx:$lifecyleExtensionVersion",
            lifecycleExtention: "androidx.lifecycle:lifecycle-extensions:$lifecyleExtensionVersion",
            navFragment       : "androidx.navigation:navigation-fragment-ktx:$navigationVersion",
            navUi             : "androidx.navigation:navigation-ui-ktx:$navigationVersion",
            room              : "androidx.room:room-runtime:$room_version",
            roomCompiler      : "androidx.room:room-compiler:$room_version",
            roomKtx           : "androidx.room:room-ktx:$room_version"
    ]


    //Essential Libraries  ###################################################################################################################

    materialVersion = "1.2.1"
    appCompatVersion = "1.2.0"
    legacySupportVersion = "1.0.0"
    kotlinVersion = '1.3.61'
    ktxVersion = '1.3.2'
    constraintLayoutVersion = '2.0.4'
    retrofitVersion = "2.9.0"
    gsonVersion = "2.8.6"
    gsonConverterVersion = "2.7.1"
    moshiConverterVersion = "2.9.0"
    loggingInterceptorVersion = "4.10.0-RC1"
    daggerVersion = '2.30.1'
    coroutineVersion = '1.4.2'
    coroutineAdapterVersion = '0.9.2'
    timberVersion = '4.7.1'
    gmsVersion = '17.0.0'
    desugarVersion = '1.0.9'
    glideVersion = "4.11.0"
    hiltVersion = "1.0.0-alpha02"
    hiltAndroidVersion = "2.30.1-alpha"
    fragmentVersion = "1.3.0-rc01"
    activityVersion = "1.2.0-rc01"
    androidSecurityVersion = "1.1.0-alpha03"
    libraries = [
            androidSecurity          : "androidx.security:security-crypto:$androidSecurityVersion",
            fragment                 : "androidx.fragment:fragment-ktx:$fragmentVersion",
            activityKtx              : "androidx.activity:activity-ktx:$activityVersion",
            glide                    : "com.github.bumptech.glide:glide:$glideVersion",
            glideCompiler            : "com.github.bumptech.glide:compiler:$glideVersion",
            jdkDesugar               : "com.android.tools:desugar_jdk_libs:$desugarVersion",
            materialDesign           : "com.google.android.material:material:$materialVersion",
            appCompat                : "androidx.appcompat:appcompat:$appCompatVersion",
            recyclerView             : "androidx.recyclerview:recyclerview:$appCompatVersion",
            legacySupport            : "androidx.legacy:legacy-support-v4:$legacySupportVersion",
            kotlinStdLib             : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion",
            ktxCore                  : "androidx.core:core-ktx:$ktxVersion",
            constraintLayout         : "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion",
            retrofit                 : "com.squareup.retrofit2:retrofit:$retrofitVersion",
            gson                     : "com.google.code.gson:gson:$gsonVersion",
            //Automated json conversion without the boilerplate needed when using only gson
            gsonConverterFactory     : "com.squareup.retrofit2:converter-gson:$gsonConverterVersion",
            moshiConverterFactory    : "com.squareup.retrofit2:converter-moshi:$moshiConverterVersion",
            loggingInterceptor       : "com.squareup.okhttp3:logging-interceptor:$loggingInterceptorVersion",
            dagger                   : "com.google.dagger:dagger:$daggerVersion",
            daggerHilt               : "androidx.hilt:hilt-lifecycle-viewmodel:$hiltVersion",
            daggerHiltViewModel      : "androidx.hilt:hilt-lifecycle-viewmodel:$hiltVersion",
            daggerHiltCompiler       : "androidx.hilt:hilt-compiler:$hiltVersion",
            daggerHiltAndroid        : "com.google.dagger:hilt-android:$hiltAndroidVersion",
            daggerHiltAndroidCompiler: "com.google.dagger:hilt-android-compiler:$hiltAndroidVersion",
            daggerCompiler           : "com.google.dagger:dagger-compiler:$daggerVersion",
            timber                   : "com.jakewharton.timber:timber:$timberVersion",
            coroutineCore            : "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutineVersion",
            coroutineAndroid         : "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutineVersion",
            coroutineCallAdapter     : "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$coroutineAdapterVersion",
            playServices             : "com.google.android.gms:play-services-location:$gmsVersion"
    ]

    //Test Libraries  ###################################################################################################################
    androidXTestCoreVersion = '1.2.0'
    androidXTestExtKotlinRunnerVersion = '1.1.2'
    archTestingVersion = '2.1.0'
    fragmentTestVersion = '1.2.5'
    hamcrestVersion = '1.3'
    junitVersion = '4.13'
    robolectricVersion = '4.4'
    junit4Version = '4.12'
    runnerVersion = '1.2.0'
    espressoVersion = '3.3.0'
    mockitoVersion = "2.2.0"
    mockWebServerVersion = "4.9.0"
    fakerVersion = "1.0.2"
    dexMakerVersion = '2.28.0'
    idleVersion = "3.3.0"

    testLibraries = [
            idlingResource     : "androidx.test.espresso:espresso-idling-resource:$idleVersion",
            mockWebServer      : "com.squareup.okhttp3:mockwebserver:$mockWebServerVersion",
            faker              : "com.github.javafaker:javafaker:$fakerVersion",
            junit4             : "junit:junit:$junit4Version",
            hamcrest           : "org.hamcrest:hamcrest-all:$hamcrestVersion",
            mockito            : "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoVersion",
            mockitoDexMaker    : "com.linkedin.dexmaker:dexmaker-mockito:$dexMakerVersion",
            archCoreTesting    : "androidx.arch.core:core-testing:$archTestingVersion",
            roboElectric       : "org.robolectric:robolectric:$robolectricVersion",
            coroutineTest      : "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutineVersion",
            fragmentTesting    : "androidx.fragment:fragment-testing:$fragmentTestVersion",
            androidXCoreTesting: "androidx.test:core:$androidXTestCoreVersion",
            runner             : "androidx.test:runner:$runnerVersion",
            truth              : "androidx.test.ext:truth:$runnerVersion",
            rules              : "androidx.test:rules:$runnerVersion",
            androidXCoreKtx    : "androidx.test:core-ktx:$androidXTestCoreVersion",
            androidXextJunit   : "androidx.test.ext:junit:$androidXTestExtKotlinRunnerVersion",
            espresso_core      : "androidx.test.espresso:espresso-core:$espressoVersion",
            espresso_intent    : "androidx.test.espresso:espresso-intents:$espressoVersion",
            roomTesting        : "androidx.room:room-testing:$room_version",
            navTesting         : "androidx.navigation:navigation-testing:$navigationVersion",
    ]
}

private Integer generateVersionCode() {
    return (ext.versionMajor * 1000000) + (ext.versionMinor * 100000) + (ext.versionPatch * 10000) + Integer.valueOf(System.env.BUILD_NUMBER ?: 0)
}

private String generateVersionName() {
    String versionName = "${ext.versionMajor}.${ext.versionMinor}.${ext.versionPatch}"
    if (ext.versionClassifier != null) {
        versionName += ext.versionClassifier
    }
    return versionName
}